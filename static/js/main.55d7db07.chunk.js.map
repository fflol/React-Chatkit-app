{"version":3,"sources":["../node_modules/keyv/src sync","../node_modules/@pusher/chatkit-server/node_modules/got/source sync","components/UsernameForm.js","components/TypingIndicator.js","components/MessageList.js","components/SendMessageForm.js","components/WhosOnlineList.js","ChatScreen.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","UsernameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","username","target","value","onSubmit","preventDefault","state","react_default","a","createElement","className","type","placeholder","React","Component","TypingIndicator","usersWhoAreTyping","length","style","height","join","MessageList","document","documentElement","clientHeight","messages","map","message","index","align","senderId","currentUsername","textAlign","key","fontWeight","parts","payload","content","components_TypingIndicator","SendMessageForm","text","WhosOnlineList","users","user","onlineStatus","presence","name","ChatScreen","sendMessage","currentUser","roomId","currentRoom","sendTypingEvent","isTypingIn","catch","error","console","log","clearInterval","timerID","_this2","ul","querySelector","setInterval","scrollToBottom","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","then","subscribeToRoomMultipart","hooks","onMessage","concat","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","filter","onUserCameOnline","forceUpdate","onUserwentOffline","onUserJoined","scrollTop","components_WhosOnlineList","components_MessageList","components_SendMessageForm","Chatkit","require","App","onUsernameSubmitted","currentScreen","default","createUser","components_UsernameForm","src_ChatScreen","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.55d7db07.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 254;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 262;","import React from 'react'\r\n\r\nclass UsernameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-5'>\r\n                <h1 className='mt-5'>the Council of liâ€™l Tibet in Exile</h1>\r\n                <form className='mt-4' onSubmit={this.onSubmit}>\r\n                    <input className='form-control' type=\"text\" placeholder='Your alias...' onChange={this.onChange} />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameForm","import React from 'react'\r\n\r\nclass TypingIndicator extends React.Component {\r\n    render() {\r\n        if (this.props.usersWhoAreTyping.length === 0) return (\r\n        <p style={{height: '30px'}}></p>\r\n        ) \r\n        else if(this.props.usersWhoAreTyping.length === 1) return (\r\n        <p style={{height: '30px'}}>{this.props.usersWhoAreTyping[0]} is typing...</p>\r\n        )\r\n        else return (\r\n            <p style={{height: '30px'}}>{this.props.usersWhoAreTyping.join(' and ')} are typing...</p>\r\n        )\r\n    }     \r\n}\r\n\r\nexport default TypingIndicator","import React from 'react'\r\nimport TypingIndicator from './TypingIndicator';\r\n\r\n\r\nclass MessageList extends React.Component {\r\n    render() {\r\n        const height = document.documentElement.clientHeight - 40\r\n\r\n        return (\r\n            <ul className='overflow-auto pr-5'\r\n                style={{ height: height }}\r\n            >\r\n                {this.props.messages.map((message, index) => {\r\n                    const align = message.senderId === this.props.currentUsername ? 'right' : 'left'\r\n                    return (\r\n                        <li style={{textAlign: align}} key={index}>\r\n                                <span style={{ fontWeight: 'bold' }}>{message.senderId}</span>\r\n                                <p>{message.parts[0].payload.content}</p>\r\n                                <br />\r\n                        </li>)\r\n                })}\r\n                <TypingIndicator usersWhoAreTyping={this.props.usersWhoAreTyping} />\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\n\r\n\r\nclass SendMessageForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n        this.props.onChange()\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.text)\r\n        this.setState({text:''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input style={{ height: '40px' }} className='form-control' type=\"text\" placeholder='' value={this.state.text} onChange={this.onChange} />\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react'\r\n\r\nclass WhosOnlineList extends React.Component {\r\n    render() {        \r\n        if (this.props.users) {\r\n            return (\r\n                <ul className='bg-dark text-white d-none d-sm-block px-4 py-5' style={{ height: '100vh' }}>\r\n                    {this.props.users.map((user, index) => {\r\n                        const onlineStatus = user.presence.state === 'online' ? 'online' : 'offline' \r\n                        return <li className={onlineStatus} key={index}>{user.name}</li>\r\n                    })}\r\n                </ul>\r\n            )\r\n        } else {\r\n            return <p>Loading...</p>\r\n        }\r\n    }\r\n}\r\n\r\nexport default WhosOnlineList","import React from 'react'\r\nimport MessageList from './components/MessageList'\r\nimport SendMessageForm from './components/SendMessageForm'\r\n// import TypingIndicator from './components/TypingIndicator'\r\nimport WhosOnlineList from './components/WhosOnlineList'\r\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client/react-native'\r\n\r\nclass ChatScreen extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            messages: [],\r\n            currentRoom: {},\r\n            currentUser: {},\r\n            usersWhoAreTyping: [],\r\n            // scrollHeight: ''\r\n        }        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ul = document.querySelector('ul.overflow-auto');\r\n        this.timerID = setInterval(() => {\r\n            this.scrollToBottom()\r\n        }, 1000);\r\n\r\n        const chatManager = new ChatManager({\r\n            instanceLocator: 'v1:us1:dcb23730-193e-4b92-8186-ffc227c1077d',\r\n            userId: this.props.currentUsername,\r\n            tokenProvider: new TokenProvider({\r\n                url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/dcb23730-193e-4b92-8186-ffc227c1077d/token'\r\n            }),\r\n        })\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                this.setState({ currentUser: currentUser })\r\n                return currentUser.subscribeToRoomMultipart({\r\n                    roomId: '31216441',\r\n                    hooks: {\r\n                        onMessage: message => {\r\n                            this.setState({\r\n                                messages: [...this.state.messages, message]\r\n                            })\r\n                        },\r\n                        onUserStartedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name]\r\n                            })\r\n                        },\r\n                        onUserStoppedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                                    username => username !== user.name\r\n                                )\r\n                            })\r\n                        },\r\n                        onUserCameOnline: () => this.forceUpdate(),\r\n                        onUserwentOffline: () => this.forceUpdate(),\r\n                        onUserJoined: () => this.forceUpdate(),\r\n                    },\r\n                })\r\n            })\r\n            .then(currentRoom => { this.setState({ currentRoom: currentRoom }) })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.ul && (this.ul.scrollTop = 100000)\r\n    }\r\n\r\n    sendMessage = (text) => {\r\n        this.state.currentUser.sendMessage({\r\n            roomId: this.state.currentRoom.id,\r\n            text: text\r\n        })\r\n    }\r\n\r\n    sendTypingEvent = () => {\r\n        this.state.currentUser\r\n            .isTypingIn({ roomId: this.state.currentRoom.id })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row' style={{ height: '100vh' }}>\r\n                    <div className='col-sm-3 p-0'>\r\n                        <WhosOnlineList users={this.state.currentRoom.users} />\r\n                    </div>\r\n                    <div className='col-sm-9 p-0' style={{ height: '100vh' }}>\r\n                        <MessageList currentUsername={this.props.currentUsername} usersWhoAreTyping={this.state.usersWhoAreTyping} messages={this.state.messages} />\r\n                        {/* <TypingIndicator  /> */}\r\n\r\n                        <SendMessageForm onSubmit={this.sendMessage} onChange={this.sendTypingEvent} />\r\n                    </div>\r\n                </div >\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatScreen","import React, { Component } from 'react'\r\nimport UsernameForm from './components/UsernameForm'\r\nimport ChatScreen from './ChatScreen'\r\n// const bodyParser = require('body-parser')\r\n// const cors = require('cors')\r\nconst Chatkit = require('@pusher/chatkit-server')\r\n// const express = require('express')\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentScreen: 'WhatIsYourUsernameScreen',\r\n      currentUsername: '',\r\n    }\r\n  }\r\n\r\n  onUsernameSubmitted = (username) => {\r\n\r\n    // fetch('http://localhost:3001/users', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json'\r\n    //   },\r\n    //   body: JSON.stringify({ username })\r\n    // })\r\n    // .then(response => {\r\n    this.setState({\r\n      currentUsername: username,\r\n      currentScreen: 'ChatScreen'\r\n    })\r\n  }\r\n\r\n  //     })\r\n  //     .catch(error => console.log(error))\r\n  // }\r\n\r\n  render() {\r\n\r\n    const chatkit = new Chatkit.default({\r\n      instanceLocator: 'v1:us1:dcb23730-193e-4b92-8186-ffc227c1077d',\r\n      key: '79cad382-328c-458f-85bb-10ef772f53ba:DgeqRa/pqpLJvD3FmNPISmHBn/3hzZYmZyo0W2TBybw=',\r\n    })\r\n\r\n    chatkit.createUser({\r\n      id: this.state.currentUsername,\r\n      name: this.state.currentUsername\r\n    })\r\n\r\n    if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n      return (<UsernameForm onSubmit={this.onUsernameSubmitted} />)\r\n    } else if (this.state.currentScreen === 'ChatScreen') {\r\n      return (<ChatScreen currentUsername={this.state.currentUsername} />)\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}