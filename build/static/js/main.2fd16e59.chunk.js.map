{"version":3,"sources":["components/UsernameForm.js","components/MessageList.js","components/SendMessageForm.js","components/TypingIndicator.js","components/WhosOnlineList.js","ChatScreen.js","App.js","index.js"],"names":["UsernameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","username","target","value","onSubmit","preventDefault","state","react_default","a","createElement","className","type","placeholder","React","Component","MessageList","height","document","documentElement","clientHeight","style","messages","map","message","index","align","senderId","currentUsername","textAlign","key","fontWeight","parts","payload","content","SendMessageForm","text","TypingIndicator","usersWhoAreTyping","length","join","WhosOnlineList","users","user","onlineStatus","presence","name","ChatScreen","sendMessage","currentUser","roomId","currentRoom","id","sendTypingEvent","isTypingIn","catch","error","console","log","clearInterval","timerID","_this2","ul","querySelector","setInterval","scrollToBottom","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","then","subscribeToRoomMultipart","hooks","onMessage","concat","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","filter","onUserCameOnline","forceUpdate","onUserwentOffline","onUserJoined","scrollTop","components_WhosOnlineList","components_MessageList","components_TypingIndicator","components_SendMessageForm","App","onUsernameSubmitted","fetch","method","headers","Content-Type","body","JSON","stringify","response","currentScreen","components_UsernameForm","src_ChatScreen","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.2fd16e59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass UsernameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-5'>\r\n                <h1 className='mt-5'>the Council of liâ€™l Tibet in Exile</h1>\r\n                <form className='mt-4' onSubmit={this.onSubmit}>\r\n                    <input className='form-control' type=\"text\" placeholder='Your alias...' onChange={this.onChange} />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameForm","import React from 'react'\r\n\r\nclass MessageList extends React.Component {\r\n    render() {\r\n        const height = document.documentElement.clientHeight - 40\r\n\r\n        return (\r\n            <ul className='overflow-auto pr-5'\r\n                style={{ height: height }}\r\n            >\r\n                {this.props.messages.map((message, index) => {\r\n                    const align = message.senderId === this.props.currentUsername ? 'right' : 'left'\r\n                    return (\r\n                        <li style={{textAlign: align}} key={index}>\r\n                            {/* <div> */}\r\n                                <span style={{ fontWeight: 'bold' }}>{message.senderId}</span>\r\n                                <p>{message.parts[0].payload.content}</p>\r\n                                <br />\r\n                            {/* </div> */}\r\n                        </li>)\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\n\r\n\r\nclass SendMessageForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n        this.props.onChange()\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.text)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input style={{ height: '40px' }} className='form-control' type=\"text\" placeholder='' onChange={this.onChange} />\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react'\r\n\r\nclass TypingIndicator extends React.Component {\r\n    render() {\r\n        if (this.props.usersWhoAreTyping.length === 0) return (\r\n        <div></div>\r\n        ) \r\n        else if(this.props.usersWhoAreTyping.length === 1) return (\r\n        <p>{this.props.usersWhoAreTyping[0]} is typing...</p>\r\n        )\r\n        else return (\r\n            <p>{this.props.usersWhoAreTyping.join(' and ')} are typing...</p>\r\n        )\r\n    }     \r\n}\r\n\r\nexport default TypingIndicator","import React from 'react'\r\n\r\nclass WhosOnlineList extends React.Component {\r\n    render() {        \r\n        if (this.props.users) {\r\n            return (\r\n                <ul className='bg-dark text-white d-none d-sm-block px-4 py-5' style={{ height: '100vh' }}>\r\n                    {this.props.users.map((user, index) => {\r\n                        const onlineStatus = user.presence.state === 'online' ? 'online' : 'offline' \r\n                        return <li className={onlineStatus} key={index}>{user.name}</li>\r\n                    })}\r\n                </ul>\r\n            )\r\n        } else {\r\n            return <p>Loading...</p>\r\n        }\r\n    }\r\n}\r\n\r\nexport default WhosOnlineList","import React from 'react'\r\nimport MessageList from './components/MessageList'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport TypingIndicator from './components/TypingIndicator'\r\nimport WhosOnlineList from './components/WhosOnlineList'\r\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client/react-native'\r\n\r\nclass ChatScreen extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            messages: [],\r\n            currentRoom: {},\r\n            currentUser: {},\r\n            usersWhoAreTyping: [],\r\n            // scrollHeight: ''\r\n        }        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ul = document.querySelector('ul.overflow-auto');\r\n        this.timerID = setInterval(() => {\r\n            this.scrollToBottom()\r\n        }, 1000);\r\n\r\n        const chatManager = new ChatManager({\r\n            instanceLocator: 'v1:us1:dcb23730-193e-4b92-8186-ffc227c1077d',\r\n            userId: this.props.currentUsername,\r\n            tokenProvider: new TokenProvider({\r\n                url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/dcb23730-193e-4b92-8186-ffc227c1077d/token'\r\n            }),\r\n        })\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                this.setState({ currentUser: currentUser })\r\n                return currentUser.subscribeToRoomMultipart({\r\n                    roomId: '31216441',\r\n                    hooks: {\r\n                        onMessage: message => {\r\n                            this.setState({\r\n                                messages: [...this.state.messages, message]\r\n                            })\r\n                        },\r\n                        onUserStartedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name]\r\n                            })\r\n                        },\r\n                        onUserStoppedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                                    username => username !== user.name\r\n                                )\r\n                            })\r\n                        },\r\n                        onUserCameOnline: () => this.forceUpdate(),\r\n                        onUserwentOffline: () => this.forceUpdate(),\r\n                        onUserJoined: () => this.forceUpdate(),\r\n                    },\r\n                })\r\n            })\r\n            .then(currentRoom => { this.setState({ currentRoom: currentRoom }) })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.ul && (this.ul.scrollTop = 100000)\r\n    }\r\n\r\n    sendMessage = (text) => {\r\n        this.state.currentUser.sendMessage({\r\n            roomId: this.state.currentRoom.id,\r\n            text: text\r\n        })\r\n    }\r\n\r\n    sendTypingEvent = () => {\r\n        this.state.currentUser\r\n            .isTypingIn({ roomId: this.state.currentRoom.id })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row' style={{ height: '100vh' }}>\r\n                    <div className='col-sm-3 p-0'>\r\n                        <WhosOnlineList users={this.state.currentRoom.users} />\r\n                    </div>\r\n                    <div className='col-sm-9 p-0' style={{ height: '100vh' }}>\r\n                        <MessageList currentUsername={this.props.currentUsername} messages={this.state.messages} />\r\n                        <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\r\n\r\n                        <SendMessageForm onSubmit={this.sendMessage} onChange={this.sendTypingEvent} />\r\n                    </div>\r\n                </div >\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatScreen","import React, { Component } from 'react'\r\nimport UsernameForm from './components/UsernameForm'\r\nimport ChatScreen from './ChatScreen'\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentScreen: 'WhatIsYourUsernameScreen',\r\n      currentUsername: '',\r\n    }\r\n  }\r\n\r\n  onUsernameSubmitted = (username) => {\r\n    fetch('http://localhost:3001/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ username })\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          currentUsername: username,\r\n          currentScreen: 'ChatScreen'\r\n        })\r\n\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  render() {\r\n    if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n      return (<UsernameForm onSubmit={this.onUsernameSubmitted} />)\r\n    } else if (this.state.currentScreen === 'ChatScreen') {\r\n      return (<ChatScreen currentUsername={this.state.currentUsername} />)\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}